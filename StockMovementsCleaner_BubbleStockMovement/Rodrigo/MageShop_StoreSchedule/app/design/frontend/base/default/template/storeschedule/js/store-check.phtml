<script type="text/javascript">
// Aguarda o carregamento completo do DOM
// Este bloco lida com a exibição da mensagem caso a loja esteja fechada
document.observe("dom:loaded", function () {
    // Verifica se a loja está aberta usando o helper PHP
    var isStoreOpen = <?php echo Mage::helper('storeschedule')->isStoreOpen() ? 'true' : 'false'; ?>;

    // Verifica se o módulo de horário está ativado
    var scheduleModuleEnabled = <?php echo Mage::helper('storeschedule')->isScheduleModuleEnabled() ? 'true' : 'false'; ?>;

    if (!scheduleModuleEnabled) {
        return; // Módulo desativado, não executa nenhuma lógica no JS
    }

    // Se a loja estiver fechada, exibe mensagens de alerta nas páginas
    if (!isStoreOpen) {        
        var baseUrl = "<?php echo Mage::getBaseUrl(); ?>";

        // Cria o elemento de mensagem
        var msg = new Element('div', {
            class: 'store-closed-msg',
            style: 'padding: 10px; color: red; font-weight: bold; text-align: center;'
        });

        // Define o conteúdo da mensagem com link para página de horários
        msg.update('<a href="' + baseUrl + 'horarios-de-funcionamento" style="color: red; text-decoration: none;">A loja está fechada no momento. <u>Clique aqui</u> para ver os horários de funcionamento.</a>');

        // Exibe a mensagem na página de produto
        if ($$('.product-view').length) {
            $$('.product-view').each(function(container) {
                container.insert({top: msg.cloneNode(true)});
            });
        }

        // Exibe a mensagem na página de categorias
        if($$('.category-products').length){
            $$('.category-products').each(function(container) {
                container.insert({top: msg.cloneNode(true)});
            });
        }

        // Exibe uma mensagem menor no topo flutuante do site
        if($$('.menuIconeCarrinhoTopo').length){
            var msgTopo = new Element('div', {
                class: 'store-closed-msg',
                style: 'padding: 0; color: red; font-weight: bold; text-align: center; margin-bottom: -5px;'
            });
            msgTopo.update('<a href="' + baseUrl + 'horarios-de-funcionamento" style="color: red; text-decoration: none; margin-left: 10%;">A loja está fechada no momento. <u>Clique aqui</u> para ver os horários de funcionamento.</a>');
            $$('.menuIconeCarrinhoTopo').each(function(container) {
                container.insert({after: msgTopo.cloneNode(true)});
            });
        }

        // Exibe a mensagem logo abaixo do banner principal
        if($$('.top-container').length){
            $$('.top-container').each(function(container) {
                container.insert({after: msg.cloneNode(true)});
            });
        }

        // Exibe mensagem na página do carrinho
        if ($$('#shopping-cart-table').length) {
            $('shopping-cart-table').insert({before: msg.cloneNode(true)});
        }

        // Exibe mensagem no checkout
        if ($('checkout-step-shipping_method')) {
            $('checkout-step-shipping_method').insert({top: msg.cloneNode(true)});
        }

        // Oculta botões
        $$('.btn-cart, .caixaBotaoTotals, button.button.btn-proceed-checkout.btn-checkout, button#onestepcheckout-place-order-button, ul.checkout-types.minicart, .add-to-cart').each(function(el) {
            el.hide();
        });
    }
});
</script>
<script type="text/javascript">
    // Segunda parte do script: lógica para esconder métodos de envio desabilitados com base no helper

    // Pega status da loja e do delivery via PHP
    var storeIsOpen = <?php echo Mage::helper('storeschedule')->isStoreOpen() ? 'true' : 'false'; ?>;
    var deliveryAvailable = <?php echo Mage::helper('storeschedule')->isDeliveryAvailable() ? 'true' : 'false'; ?>;
    var scheduleModuleEnabled = <?php echo Mage::helper('storeschedule')->isScheduleModuleEnabled() ? 'true' : 'false'; ?>;

    document.observe("dom:loaded", function () {
        if (!scheduleModuleEnabled) {
            return; // Módulo desativado, não executa nenhuma lógica no JS
        }

        // Executa apenas em checkout/cart ou checkout/onepage
        if (!window.location.href.includes("checkout/onepage") && !window.location.href.includes("checkout/cart")) {
            return;
        }

        var allowedMethods = [];

        if (storeIsOpen) {
            allowedMethods.push("flatrate_flatrate");
            if (deliveryAvailable) {
                // allowedMethods.push("matrixrate_matrixrate");
                allowedMethods.push("matrixrate_matrixrate_7"); 
            }
        }

        // Corrige problema do Magento com inputs escondidos em spans
        function corrigirInputEscondido() {
            // Procura inputs dentro de spans no-display e move para fora
            $$('#checkout-shipping-method-load span.no-display input[type="radio"]').each(function(input) {
                var span = input.up('span.no-display');
                if (span) {
                    // Move input para antes do span e remove span
                    span.insert({before: input});
                    span.remove();
                }

                // Garante classe radio
                if (!input.hasClassName('radio')) {
                    input.addClassName('radio');
                }
            });
        }

        // Filtra os métodos de envio para mostrar apenas os permitidos
        function filtrarMetodosDeEnvio() {
            var methods = $$('#checkout-shipping-method-load dl.sp-methods input[type=radio]');
            
            var hasAnyVisible = false;

            methods.each(function(input) {
                var metodo = input.value;
                var dt = input.up('dt');
                var dd = input.up('dd');

                if (allowedMethods.indexOf(metodo) !== -1) {
                    if (dt) dt.show();
                    if (dd) dd.show();
                    input.disabled = false;
                    hasAnyVisible = true;
                } else {
                    if (dt) dt.hide();
                    if (dd) dd.hide();
                    input.disabled = true;
                }
            });

            // Se nenhum método estiver visível, talvez exibir alguma mensagem de aviso, se quiser
        }


        // Função que executa filtragem e correção depois do DOM mudar, com delay pra garantir que Magento terminou atualizações
        function executarAtualizacao() {
            setTimeout(function() {
                filtrarMetodosDeEnvio();
            }, 100); // 100ms delay para garantir execução pós DOM updates
        }

        filtrarMetodosDeEnvio();

        // Observa mudanças no DOM (quando o Magento recarrega os métodos de envio)
        var shippingMethodsContainer = $('checkout-shipping-method-load');
        if (shippingMethodsContainer) {
            shippingMethodsContainer.observe('DOMSubtreeModified', executarAtualizacao);
        }
    });
</script>
